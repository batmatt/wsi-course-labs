import argparse
import numpy as np
import matplotlib.pyplot as plt
from city import City
from coordinates_generator import CoordinatesGenerator


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-cn", "--cities_number", type=int, help="Number of cities")
    parser.add_argument(
        "-cd",
        "--cities_distribution",
        type=str,
        help="Type of cities distribution: [ud|cd|rd] - [uniform|clustered|random]",
    )

    args = parser.parse_args()

    cities_number = args.cities_number
    cities_distribution = args.cities_distribution

    cities = []

    coordinates_generator = CoordinatesGenerator(cities_number)
    if cities_distribution == "ud":
        X, Y = coordinates_generator.uniform_distribution()
    else:
        print("Wrong distribution type")
        exit(1)

    # just testing if city objects initialize and work just fine
    # TODO: it would be nice to somehow initialize cities_number of cities with coords generated by CoordinatesGenerator
    c1 = City(0, 0, cities)
    c2 = City(5, 0, cities)
    c3 = City(0, 5, cities)
    c4 = City(5, 5, cities)

    for city in cities:
        city.fill_distances_dict(cities)
    print(cities[2].distances)

    plt.scatter(X, Y)
    plt.show()


if __name__ == "__main__":
    main()
